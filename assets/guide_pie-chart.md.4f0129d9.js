import{o as t,c as e,a as r}from"./app.19948c05.js";const d='{"title":"PieChart","description":"","frontmatter":{},"headers":[{"level":2,"title":"API","slug":"api"},{"level":2,"title":"Example","slug":"example"}],"relativePath":"guide/pie-chart.md","lastUpdated":1622958254507}',l={},n=r('<h1 id="piechart"><a class="header-anchor" href="#piechart" aria-hidden="true">#</a> PieChart</h1><p>饼图组件，内部提供了一些默认配置，可快速实现饼图、南丁格尔图和圆环图。</p><h2 id="api"><a class="header-anchor" href="#api" aria-hidden="true">#</a> API</h2><table><thead><tr><th style="text-align:center;">Name</th><th style="text-align:center;">Description</th><th style="text-align:center;">Type</th><th style="text-align:center;">Default</th></tr></thead><tbody><tr><td style="text-align:center;">width</td><td style="text-align:center;">图表容器的宽度，可以是绝对像素值或父元素宽度的百分比</td><td style="text-align:center;">string</td><td style="text-align:center;"><code>&#39;100%&#39;</code></td></tr><tr><td style="text-align:center;">height</td><td style="text-align:center;">图表容器的高度，可以是绝对像素值或父元素高度的百分比</td><td style="text-align:center;">string</td><td style="text-align:center;"><code>&#39;100%&#39;</code></td></tr><tr><td style="text-align:center;">theme</td><td style="text-align:center;">图表颜色主题</td><td style="text-align:center;">&#39;light&#39; | &#39;dark&#39;</td><td style="text-align:center;"><code>&#39;light&#39;</code></td></tr><tr><td style="text-align:center;">adaptive</td><td style="text-align:center;">当窗口 resize 时，是否让图表自动 resize 以自适应窗口大小</td><td style="text-align:center;">boolean</td><td style="text-align:center;"><code>true</code></td></tr><tr><td style="text-align:center;">type</td><td style="text-align:center;">饼图的类型</td><td style="text-align:center;">&#39;pie&#39; | &#39;angle&#39; | &#39;ring&#39; | &#39;angle-ring&#39;</td><td style="text-align:center;">&#39;pie&#39;</td></tr><tr><td style="text-align:center;">title</td><td style="text-align:center;">标题</td><td style="text-align:center;">string</td><td style="text-align:center;">-</td></tr><tr><td style="text-align:center;">textColor</td><td style="text-align:center;">全局文本的颜色</td><td style="text-align:center;">string</td><td style="text-align:center;"><code>#333</code></td></tr><tr><td style="text-align:center;">series</td><td style="text-align:center;">系列数据，接受标准的 <a href="https://echarts.apache.org/zh/option.html#series-pie" target="_blank" rel="noopener noreferrer">PieSeriesOption</a> 配置</td><td style="text-align:center;">PieSeriesOption | PieSeriesOption[]</td><td style="text-align:center;">-</td></tr><tr><td style="text-align:center;">showLegend</td><td style="text-align:center;">是否显示 legend</td><td style="text-align:center;">boolean</td><td style="text-align:center;"><code>false</code></td></tr><tr><td style="text-align:center;">bordered</td><td style="text-align:center;">每个类目块是否显示 border</td><td style="text-align:center;">boolean</td><td style="text-align:center;"><code>false</code></td></tr><tr><td style="text-align:center;">borderColor</td><td style="text-align:center;">border 的颜色</td><td style="text-align:center;">string</td><td style="text-align:center;"><code>#fff</code></td></tr><tr><td style="text-align:center;">borderRadius</td><td style="text-align:center;">border 圆角大小</td><td style="text-align:center;">number</td><td style="text-align:center;"><code>8</code></td></tr><tr><td style="text-align:center;">borderWidth</td><td style="text-align:center;">border 的宽度</td><td style="text-align:center;">number</td><td style="text-align:center;"><code>2</code></td></tr><tr><td style="text-align:center;">labelFormatter</td><td style="text-align:center;">标签内容格式器，具体用法请参考<a href="https://echarts.apache.org/zh/option.html#series-pie.label.formatter" target="_blank" rel="noopener noreferrer">series-pie.label.formatter</a></td><td style="text-align:center;">string | Function</td><td style="text-align:center;"><code>{b}</code></td></tr><tr><td style="text-align:center;">radius</td><td style="text-align:center;">饼图的半径，也可以通过数组指定内径和外径</td><td style="text-align:center;">number | string | (number | string)[]</td><td style="text-align:center;"><code>[&#39;40%&#39;, &#39;60%&#39;]</code></td></tr><tr><td style="text-align:center;">hideLabel</td><td style="text-align:center;">是否隐藏 label</td><td style="text-align:center;">boolean</td><td style="text-align:center;"><code>false</code></td></tr><tr><td style="text-align:center;">option</td><td style="text-align:center;">ECharts 原生的配置对象 <a href="https://echarts.apache.org/zh/option.html" target="_blank" rel="noopener noreferrer">EChartsOption</a></td><td style="text-align:center;">EChartsOption</td><td style="text-align:center;">-</td></tr></tbody></table><div class="tip custom-block"><p class="custom-block-title">关于 series 和 option</p><p>PieChart 通过 <code>series</code> 属性接受系列数据，可以传递标准的 <a href="https://echarts.apache.org/zh/option.html#series-line" target="_blank" rel="noopener noreferrer">PieSeriesOption</a> 来配置系列的每一个细节。</p><p>通常你不需要配置 <code>option</code> 属性就能实现简单的饼图，但如果设置 PieChart 提供的便捷属性无法达到你想要的效果，也可以通过配置 <code>option</code> 来实现更细粒度的控制，<code>option</code> 的配置格式与 ECharts 实例方法 <code>setOption</code> 的第一个参数完全相同，实际上，PieChart 在内部会将 <code>option</code> 与预设配置合并，然后传递给 <code>setOption</code> 方法。它比预设的配置具有更高的优先级。</p></div><h2 id="example"><a class="header-anchor" href="#example" aria-hidden="true">#</a> Example</h2><iframe src="https://codesandbox.io/embed/vue-echarts-demo-pujot?fontsize=14&amp;hidenavigation=1&amp;initialpath=%2Fpie-chart&amp;module=%2Fsrc%2Fdemo%2Fpie-chart-demo.vue&amp;theme=light" style="width:100%;height:500px;border:0;border-radius:4px;overflow:hidden;" title="vue-echarts-demo" allow="accelerometer; ambient-light-sensor; camera; encrypted-media; geolocation; gyroscope; hid; microphone; midi; payment; usb; vr; xr-spatial-tracking" sandbox="allow-forms allow-modals allow-popups allow-presentation allow-same-origin allow-scripts"></iframe>',7);l.render=function(r,d,l,a,i,o){return t(),e("div",null,[n])};export default l;export{d as __pageData};
